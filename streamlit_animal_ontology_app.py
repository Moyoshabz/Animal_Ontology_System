# -*- coding: utf-8 -*-
"""streamlit_animal_ontology_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Sdez6-_AaOUMq-lIL7PaPVDcDRFvrcoG
"""

#Library
!pip install owlready2

from owlready2 import *

#Installing a visual tool
!pip install streamlit
import streamlit as st

st.title("Animal Ontology Reasoning App")
st.markdown("Builds an animal ontology and allows interactive reasoning.")

onto = get_ontology("http://example.org/animal_ontology.owl")

with onto:
    # Define the Categories
    class Animal(Thing): pass
    class Mammal(Animal): pass
    class Bird(Animal): pass
    class Reptile(Animal): pass

    # Sub categories
    class Dog(Mammal): pass
    class Penguin(Bird): pass
    class Parrot(Bird): pass

    # The Properties: whether it can fly
    class can_fly(Animal >> bool): pass

    # Creating Instances
    buddy = Dog("Buddy")
    tweety = Parrot("Tweety")
    pingu = Penguin("Pingu")

    # Defaulting into logic for flying
    can_fly[tweety] = [True]
    can_fly[pingu] = [False]

# Saving the ontology
onto.save(file="animal_ontology.owl", format="rdfxml")

st.success("Ontology built and saved as 'animal_ontology.owl'.")

onto = get_ontology("animal_ontology.owl").load()

# Accessing the instances
animals = list(onto.individuals())
animal_names = [a.name for a in animals]

selected_animal = st.selectbox("Choose an animal:", animal_names)
animal = onto.search_one(iri="*" + selected_animal)

if animal:
    st.subheader(f" {selected_animal} belongs to:")
    for cls in animal.is_a:
        if isinstance(cls, ThingClass):
            st.write(f"- {cls.name}")

    try:
        fly_status = onto.can_fly[animal][0]
        if fly_status:
            st.success("Can Fly")
        else:
            st.error("Cannot Fly")
    except:
        st.warning("Flying ability not specified.")